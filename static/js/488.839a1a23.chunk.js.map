{"version":3,"file":"static/js/488.839a1a23.chunk.js","mappings":"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","sources":["webpack://phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-PXXQR4UW.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-JSSKUSQH.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"regBtn\":\"RegisterForm_regBtn__NjUUK\"};","import { Input } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') setName(value);\n    if (name === 'email') setEmail(value);\n    if (name === 'password') setPassword(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        {/* <span>name</span> */}\n        <Input\n          p=\"5\"\n          borderColor=\"teal\"\n          _placeholder={{ opacity: 1, color: 'gray.500', textAlign: 'center' }}\n          focusBorderColor=\"lime\"\n          variant=\"flushed\"\n          mt=\"50px\"\n          placeholder=\"Write your name\"\n          name=\"name\"\n          type=\"text\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        {/* <span>email</span> */}\n        <Input\n          p=\"5\"\n          layerStyle=\"input\"\n          borderColor=\"teal\"\n          _placeholder={{ opacity: 1, color: 'gray.500', textAlign: 'center' }}\n          variant=\"flushed\"\n          focusBorderColor=\"teal\"\n          mt=\"10px\"\n          placeholder=\"Write your email\"\n          name=\"email\"\n          type=\"email\"\n          required\n          value={email}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        {/* <span>password</span> */}\n        <Input\n          p=\"5\"\n          layerStyle=\"input\"\n          borderColor=\"teal\"\n          _placeholder={{ opacity: 1, color: 'gray.500', textAlign: 'center' }}\n          variant=\"flushed\"\n          focusBorderColor=\"teal\"\n          mt=\"10px\"\n          placeholder=\"Write your password\"\n          name=\"password\"\n          type=\"password\"\n          required\n          value={password}\n          onChange={handleChange}\n          minLength={8}\n        />\n      </label>\n      <button className={css.regBtn} type=\"submit\">\n        REGISTER\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return (\n    <section>\n      <div>\n        <h1>Register Page</h1>\n        <RegisterForm />\n      </div>\n    </section>\n  );\n};\n\nexport default RegisterPage;\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      var _a, _b;\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        id: (_a = props2.id) != null ? _a : labelId,\n        htmlFor: (_b = props2.htmlFor) != null ? _b : id\n      };\n    },\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","register","I","p","borderColor","_placeholder","opacity","color","textAlign","focusBorderColor","variant","mt","placeholder","type","required","onChange","layerStyle","minLength","className","css","assignRef","ref","current","error","Error","mergeRefs","refs","node","forEach","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","getLabelProps","_a","_b","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_c","disabled","readOnly","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size"],"sourceRoot":""}